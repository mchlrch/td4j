- generic choice support with JList and selectable/choice property (LocalizedHelloWorldExample)

- ProjectExample => showcase for supported widgets

- code duplication: GenericForm
- code duplication: CollectionWidgetController

- replace use of ModelInspector with OpenClassRepository
- rewrite ModelInspector

- full support for converters

- Naming: @Executable VS @Operation, @Expose VS @Show, @ExposeProperties VS @ShowProperties / @HideProperties
- Naming: model VS context (ScalarProperty)
- cleanup interface names (Handler instead of IHandler)
- ExecutableAction: keine Auto-Navigation zu primitiven Typen.ch


- short description of all examples: wiki and class comment


## backlog
----------
:: ModelInspector
- Eigenes Metamodel
- JavaMetaModel
- MetaModel Layering: ab Modell VS. f端r widgets

::Choice/Combobox
- Basic Choice / ComboBox support
- ChoiceUISwing
- support fuer selectable properties


::ExecuteDialog:
- wenn namen in @Expose auf properties zeigen, dann edit mode - also felder mit property werten befullen
- erweiterter execute dialog (fluentFeed)


::Types/Converters
- converter repository
- Prio. 1 haben Typen von String geparsed werden koennen
- boolean VS. Boolean // aka primitive types
- ModelInspector.isPrimitive(Class) : boolean


::DataConnector
- equals und hashCode in connectors sauber implementieren
- clean-up IDataConnectorFactory und DefaultDataConnectorFactory (infoQueue)
- rethink ConnectorInfo

:: Examples
- finish currency converter
- Fowlers state machine aus DSL buch


## cleanup pending
------------------ 
- beispiel mit DDD kompatiblem Modell (Repository und Factory als Teile des Domain Models)

- scenarios for iterative domain driven model refinement
  - read/write -> read-only
    public field -> private field & public getter
  - immutable & read-only
    public final field (and optional public getter)
  - virtual property (derive age from birthdate)
    public getter
  - aggregates
    nur aggregates in der sidebar als navigations startpunkt verf端gbar


- How can Factory und Repository be supported as First-Class objects ?

- Property Identifikation via Enumerations, Beispiel f端r sf wiki documentation




Typisierung von IModelSocket ausprobieren
package dependencies analysieren



combobox

search/replace NullPointerException/ObjectTK.enforceNotNull()


IvokationParameterDialog mit Objektauswahl: person.order().addItem(foo, 2)


Caption

testcases
dataProxy refresh/reload model ist NICHT observable, loopbackUpdate via Mediator



- getter only plugs richtig handhaben, Acess Rules beachten in writeValue0()
- graceful handling of getXY() ohne setXY() methode (Access)

- Choice / ComboBox
  getXYChoice() - Methode unterst端tzen

- fluent methods, dialog, IFluentFeed support

- getXYAccess() : Access specification (read/write)